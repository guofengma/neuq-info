<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hang.neuq.mapper.UserJwInfoMapper">
  <resultMap id="BaseResultMap" type="cn.hang.neuq.entity.po.UserJwInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="class_id" jdbcType="VARCHAR" property="classId" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="user_type" jdbcType="VARCHAR" property="userType" />
    <result column="weight_ average_gpa" jdbcType="REAL" property="weightAverageGpa" />
    <result column="jw_username" jdbcType="VARCHAR" property="jwUsername" />
    <result column="jw_password" jdbcType="VARCHAR" property="jwPassword" />
    <result column="is_jw_auth" jdbcType="INTEGER" property="isJwAuth" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, class_id, student_id, student_name, grade, profession, college, user_type, 
    `weight_ average_gpa`, jw_username, jw_password, is_jw_auth, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" parameterType="cn.hang.neuq.entity.po.UserJwInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_jw_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_jw_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_jw_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hang.neuq.entity.po.UserJwInfoExample">
    delete from user_jw_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hang.neuq.entity.po.UserJwInfo">
    insert into user_jw_info (id, user_id, class_id, 
      student_id, student_name, grade, 
      profession, college, user_type, 
      `weight_ average_gpa`, jw_username, jw_password, 
      is_jw_auth, gmt_create, gmt_modified
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{classId,jdbcType=VARCHAR}, 
      #{studentId,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{profession,jdbcType=VARCHAR}, #{college,jdbcType=VARCHAR}, #{userType,jdbcType=VARCHAR}, 
      #{weightAverageGpa,jdbcType=REAL}, #{jwUsername,jdbcType=VARCHAR}, #{jwPassword,jdbcType=VARCHAR}, 
      #{isJwAuth,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hang.neuq.entity.po.UserJwInfo">
    insert into user_jw_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="weightAverageGpa != null">
        `weight_ average_gpa`,
      </if>
      <if test="jwUsername != null">
        jw_username,
      </if>
      <if test="jwPassword != null">
        jw_password,
      </if>
      <if test="isJwAuth != null">
        is_jw_auth,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="weightAverageGpa != null">
        #{weightAverageGpa,jdbcType=REAL},
      </if>
      <if test="jwUsername != null">
        #{jwUsername,jdbcType=VARCHAR},
      </if>
      <if test="jwPassword != null">
        #{jwPassword,jdbcType=VARCHAR},
      </if>
      <if test="isJwAuth != null">
        #{isJwAuth,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hang.neuq.entity.po.UserJwInfoExample" resultType="java.lang.Long">
    select count(*) from user_jw_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_jw_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=VARCHAR},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=VARCHAR},
      </if>
      <if test="record.weightAverageGpa != null">
        `weight_ average_gpa` = #{record.weightAverageGpa,jdbcType=REAL},
      </if>
      <if test="record.jwUsername != null">
        jw_username = #{record.jwUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.jwPassword != null">
        jw_password = #{record.jwPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.isJwAuth != null">
        is_jw_auth = #{record.isJwAuth,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_jw_info
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      class_id = #{record.classId,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      profession = #{record.profession,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=VARCHAR},
      user_type = #{record.userType,jdbcType=VARCHAR},
      `weight_ average_gpa` = #{record.weightAverageGpa,jdbcType=REAL},
      jw_username = #{record.jwUsername,jdbcType=VARCHAR},
      jw_password = #{record.jwPassword,jdbcType=VARCHAR},
      is_jw_auth = #{record.isJwAuth,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hang.neuq.entity.po.UserJwInfo">
    update user_jw_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="weightAverageGpa != null">
        `weight_ average_gpa` = #{weightAverageGpa,jdbcType=REAL},
      </if>
      <if test="jwUsername != null">
        jw_username = #{jwUsername,jdbcType=VARCHAR},
      </if>
      <if test="jwPassword != null">
        jw_password = #{jwPassword,jdbcType=VARCHAR},
      </if>
      <if test="isJwAuth != null">
        is_jw_auth = #{isJwAuth,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hang.neuq.entity.po.UserJwInfo">
    update user_jw_info
    set user_id = #{userId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      `weight_ average_gpa` = #{weightAverageGpa,jdbcType=REAL},
      jw_username = #{jwUsername,jdbcType=VARCHAR},
      jw_password = #{jwPassword,jdbcType=VARCHAR},
      is_jw_auth = #{isJwAuth,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>